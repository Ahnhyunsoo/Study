20220221 복습

시프트 연산자 : 각비트를 왼쪽 , 오른쪽으로 이동시키는 연산자
왼쪽 시프트 연산 : 2의 n제곱만큼 곱하기 연산을 수행하며, 오버플로우가 발생할 수 있다.
오른쪽 시프트 연산 : 2의n제곱만큼 나누기 연산을 수행한다.

증감 연산자 : ++, -- 하나를 증가 또는 감소 시키는 연산
조건 1. 상수는 증감 연산자를 사용할 수 없다. ex) 10++
조건 2. 증감연산자가 붙어있는 위치에 따라서 기능이 달라진다.
ex) int iTemp = 10;
iTemp++ (후위 연산자 선대입 후 연산)
cout << iTemp = 10
++iTemp (전위 연산자 선연산 후 대입 속도가 더 빠름)
cout << iTemp = 11
조건3. 증감 연산자 또한 열달아서 사용가능하다.
ex) (++(++iTemp)) = 12

연산자 축약 : 자기 자신의 값을 변화할 때 연산자의 상태를 줄여서 표현할 수 있다.
iTemp = iTemp + 10     ==    iTemp +=10

삼항 연산자 : 간단한 조건을 이용하여 값을 도출하고자 할 때 또는 단순 조건식을 해결하고자 할 때 사용한다.
결과 = 조건 ? 참일경우 : 거짓일경우 
int iTemp = 10
int iTemp2 = 5
int iTemp3 = 4
iTemp = (iTemp2>iTemp3) ? iTemp2 : iTemp3    결과 : 5

형변환(캐스팅) : 사용자가 프로그램 코드 진행에 따라 원하는 자료형으로 강제적으로 변환 하는 것
묵시적 형 변환 : 프로그램이 자동적으로 변환하는것 ex) fAvg = iTotal / 3.f
명시적 형 변환 : 사용자가 직접 명시하여 형변환 하는것 ex) fAvg = float(iTotal) / 3.f

분기문 : 기준을 잡아서 나누는 문법 if문, else문, goto문이 있다.

switch문 : 상수를 이용하여 분기하는 문법, 상수 조건 분기문이라고도 한다.
조건으로 상수 또는 정수만 취급하며, 실수로는 분기할 수 없다.
ex)  

int iNum = 0
cin >> iNum 
switch(iNum)
{
	case 1 :
	cout << "1번입력";
	break;

	case 2 : 
	cout << "2번입력";
	break;

	defalut :
	cout << "정수를 입력해주세요";
} 