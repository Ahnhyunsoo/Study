2022 0218 복습


변수 이름 짓기 규칙
1. 변수명은 알파벳과 숫자로 구성할 수 있으며 단, 숫자가 먼저 시작되면 안된다. 1abc = x abc1 = o
2. 변수명은 대소문자를 확실히 구분해야 한다.
3. 프로그래밍에서 제공하는 기본 키워드로는 이름을 지을 수 없다. ex) int int = 1;
4. 공백 또는 특수 문자가 올 수 없다. 단, _는 허용
5. 같은 이름의 변수로 다시 선언할 수 없다.(같은 구역내 한정 다른 구역에선 가능)

표기법의 종류
1. 헝가리안 표기법 : 변수명 앞에 각 자료형을 상징하는 문자를 삽입한다. ex) iTemp, fTemp, dTemp
2. 카멜(낙타) 표기법 : 단어와 단어 사이를 대문자로 구분하는 방법 ex) int playerHp
3. 파스칼 표기법 : 변수명이 무조건 대문자로 시작, 복합어일 경우 중간에 시작하는 새로운 단어의 첫글자도 대문자 ex) PlayerHp
4. 스네이크(언더바) 표기법 ; 단어와 단어 사이에 _를 사용, 주로 함수 매개변수에 사용 ex) void Func(int _iPlayerhp)

연산자의 종류 : + - * / %

sizeof 연산자 : 자료형의 크기를 바이트 단위로 계산해주는 연산자 ex) int a = 1 sizeof(a) = 4
배열의 이름이 연산자를 이용하여 크기를 구할 경우 배열 전체의 크기를 계산해준다.

char 자료형은 정수를 저장할 수 있는 자료형이므로 sizeof로 크기를 구했을 때 연산시 정수형인 4바이트가 나올 수 있다.

대입 연산자
1. 연산자를 기준으로 좌하오가 우항의 자료형이 반드시 일치해야 한다.
2. 대입 연산자를 기준으로 오른쪽에 있는 데이터가 왼쪽으로 대입이 발생한다.

논리 연산자
&&(and), ||(or), !(not)
and연산자 : 두개의 값이 모두 참이여야 값을 반환한다.
or연산자 : 둘중 하나라도 참이면 값을 반환한다.
not : 참을 거짓으로, 거짓을 참으로 만들어주는 연산자.

비트 단위 연산자
&(and), |(or), ~(not), ^(xor)
^(xor) = 둘중 하나만 참이여야 참을 반환하는 연산자.
include bitset = 정수값을 원하는 비트수로 표현하기 위해 포함 bitset<몇비트로>(누구를)

보수의 개념
컴퓨터는 빼기란 개념이 없음으로 보수를 이용해 덧셈으로 만든다.
EX) 10진수 6 = 2진수 110 2의제곱큰자리를 구하면 1000 여기서 1을빼면
111이고 여기에 기존110을 빼면 1이 남는다. 이것이 보수이고
+에서 -로 바꾸고 다시 10진수로 바꿧을때 값이 1증가하는것은
2진수 상태에서 보수를 더하면 01에서 10이 01 = 1 10 = 2 되기 때문이다.


