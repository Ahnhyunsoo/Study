커서의 위치 = 정수형
ftell = 커서의 현재 위치를 반환하는 함수
Seek_End로 커서를 파일의끝으로 이동한다음 그 위치를 정수형변수에 저장한후
char* 배열을 정수형변수만큼 선언하고 복사하면 이미지가 복사된다.

===============================================================================================
래퍼런스 = 참조하기 위한 문법
장점 : 속도가 매우 빠르고 메모리에 값을 차지하지않는다.
단점 : 오직 하나만 참조할 수 있기때문에 변수마다 전부 선언해줘야한다.
int A = 10;
int& B = A;
cout << A; = 10


===============================================================================================
전처리기 = 컴파일 이전에 실행되는 작업

#define = 매크로 (값을 강제 치환시킨다)
함수 매크로 = 자료형과 상관없이 그대로 치환(모든 자료형 호환)
연산자 우선순위를 생각하며 소괄호로 묶어줘야한다.

ex) #define Func(X) X*X     Func(5) = 25
ex) #define Func(X) X*X Func(2+2) = 8
ex) #define Func((X)*(X)) Func(2+2) = 16

여러줄 코드를 \로 분할하며 보통 한줄짜리 코드를 만들 때 주로 사용(간단한 함수를 만들 때 자주 사용한다.)
장점 : 컴파일 이전에 선언하기 때문에 속도가 매우 빠르고 메모리공간을 차지하지 않는다.
단점 : 전처리기이다 보니 디버깅에 어려움이 있다.(디버깅은 컴파일 도중에 행하는 동작) 

함수매크로를 이용한 문자열 치환
#defind Func(A,B) A"의 직업은"B"입니다" (이럴경우 값을 ""문자열 형태로 안넣으면 오류가 나는데 이때 #을 써주면 문제없이 실행된다.)
================================================================================================
조건부 컴파일
#if(조건)
#elif(조건)
#else
#endif (조건부 컴파일 종료)

#ifdef (define으로 정의되어 있다면 실행)
#elif ( define으로 정의되어 있다면 실행)
#else (모두 정의되어 있지 않다면 실행)
#endif

#ifndef (define으로 정의되어 있지 않다면 실행)
#endif