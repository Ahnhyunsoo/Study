20220330복습

다형성 
===================================================
오버라이딩
---------------------------------------------------------------------------
오버라이딩할 때 지켜야하는 규칙
1. 순수가상함수가 단하나라도 있으면 추상클래스라고 부른다
2. 추상클래스는 객체생성이 불가능하다
3. 부모클래스에 선언한 순수가상함수가 있다면 모든 자식클래스는 반드시 몸체를 구현해야한다
오버라이딩 = 하나이상의 가상함수가 꼭 필요하다.
오버라이딩의 특성은 은닉화와 재정의가 있다. 
오버라이딩에서의 은닉화 = 객체의 선언부가 아닌 객체의 함수를 호출할 때를 보면 누구의 함수인지 알 수 없기 때문에 은닉화가 성립된다.
재정의 = 부모의 가상함수를 상속받아 자식객체에서 원하는대로 재정의해서 사용가능하다.
오버라이딩은 정적바인딩이 아닌 동적 바인딩이다. 가상함수포인터와 가상함수테이블은 컴파일 이전에 결정되지만
어느 가상함수포인터로 접근할지는 동적인 타이밍에 결정되므로 동적바인딩이라고 한다.
오버라이딩을 통해 재정의를 할 수 있는데 가상함수가 많을수록 쓸모없는 데이터가 많아진다.
이럴 때 부모클래스에서 정의가 아닌 = 0 을 해주고 자식객체에서 정의해주면 된다.
이때 = 0 을 순수가상함수 라고하며 순수가상함수를 하나라도 포함하고 있으면 추상클래스라고 한다. abstract키워드를 붙여서 표현할 수 있다. 추상클래스는 객체생성이 불가능하다
순수가상함수의 정의부가 없기때문이다. 함수의 필요충분조건이 성립되지 않기때문에 메모리에 할당이 불가능하다. 함수의필요충분조건 = 선언 , 정의
동적바인딩 = 오버라이딩 = 가상함수 작동원리
동적바인딩은 가상함수포인터를 통해 런타임에 어디에 접근할지 결정하기 때문에 동적바인딩이고
오버라이딩이 성립되려면 가상함수가 하나이상 꼭 존재해야하고 가상함수가 있으면 객체생성시 가상함수포인터와 가상함수테이블이 자동적으로 생성된다.
가상함수의 작동원리는 가상함수포인터를 이용해 동적인 타이밍에 가상함수테이블에 접근하여 가상함수를 사용한다. 
-----------------------------------------------------------------------------------------
캐스팅



오버로딩과 오버라이딩의 차이점




업캐스팅
다운캐스팅
c타입캐스팅
c++타입캐스팅