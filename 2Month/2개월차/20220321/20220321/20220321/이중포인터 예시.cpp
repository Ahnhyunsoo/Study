#include "stdafx.h"

void Func(int** p1, int** p2);

void main(void)
{
	int a = 10;
	int b = 20;

	int* p1 = &a;
	int* p2 = &b;

	Func(&p1, &p2); // 이중포인터를 쓰는 이유 인자로 포인터 변수 즉 주소를 넘겨서
				//주소를 바꿔주니 주소가 가르키는 값이 바뀔 것이다 라고 생각할 수 있는데
	// 결국에 포인터도 변수이기 때문에 값복사가 일어나서 넘겨주는p1과 넘겨받은p1은 서로 다른메모리에 위치해있다.
	//때0문에 넘겨줄 때 포인터변수의 값이 아닌 포인터변수 자체의 주소를 넘겨주고 
	//넘겨받은 포인터변수를 저장하는 포인터변수 즉 이중포인터를 사용해서 넘겨받은 포인터변수의 값
	//즉 주소를 직접 바꿔주면 변경사항이 적용된다.
	//결국에 변수의 주소를넘기고 값을 변경하는것과 같은 개념인데 그냥 포인터변수에 포인터가 붙은것뿐이다.
	cout << "p1 : " << *p1 << " p2 : " << *p2 << endl;
}

void Func(int** p1, int** p2)
{
	int* iTemp = NULL;
	iTemp = *p1;
	*p1 = *p2;
	*p2 = iTemp;
}