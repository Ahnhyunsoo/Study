20220322복습
객체 = 클래스(자료형) + 인스턴스(주소)

클래스의 4대속성 : 은닉화 캡슐화 상속성 다형성
은닉화 : 클래스내의 데이터(변수)와 함수(기능)을 외부로 부터 보호하는(숨기는) 성질을 의미
접근 제어 지시자 : private(내부접근), protected(자식은허용(상속), 내부허용), public(내부 외부 모두허용)
구조체 = 접근 제어 지시자의 디폴트값은 public이다.
클래스 = 접근 제어 지시자의 디폴트값은 private이다.
private의 변수에 접근하기 위해서는 함수를 이용한 Get과 Set을 이용한 엑세스메소드를 이용한다.
Get = 맴버변수를 리턴해주는함수 / Set = 맴버 변수를 매개변수로 바꿔주는것
캡슐화 : 관련있는 데이터와 기능을 한 클래스 안에 묶어서 관리하는 행위
은닉화와 캡슐화는 상호간의 보호작용이다. 캡슐화가 성립돼야 은닉화가 가능하다.
캡슐화가 되어잇으면 기능을 유추할 수는 있지만 결국엔 직접 찾아봐야 알 수 있기 때문에 은닉화가 적용된 것 이다.
어떤기능인지 유추할 수 있다 = 캡슐화
실제로 어떤기능인지 알 수 없다 = 은닉화
CObject,CButton,CEdit등을 예약클래스라고 하는데 이미 디폴트로 있는 클래스이므로 클래스이름을 예약클래스이름으로 선언할 수 없다.

동적 할당을 하는 이유
ex) 배열을 선언할 때 정적으로 선언하면 int a[10]; 
컴파일 이전에 배열의 크기가 결정되어 크기를 수정할 수 없지만
배열을 선언헐 때 동적으로 선언하면 런타임에 선언하기 때문에
int b = 5; / int c[b]; 처럼 배열의 크기가 가변성을 가져서 관리하기 유용하다.

이중포인터를 쓰는 이유
= 만약 포인터변수의 주소를 변경하고싶은데 포인터변수를 넘기면 값복사가 일어나기 때문에 적용이 되지않는다.
그렇기 때문에 포인터변수를 담는 포인터변수 즉 이중포인터를 사용하여 이중포인터의 값을 변경해주면 포인터의 주소가 변경된다.
예제 20220322 프로젝트 확인
