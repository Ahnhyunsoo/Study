20220328 복습
friend = private으로 해당클래스에서 private 접근을 허용하는경우에 사용하는 문법
friend class CB; classA에서 이렇게 선언해주면 B에서 A의 private맴버를 사용할 수 있게 만든다.
friend는 클래스자체를 선언할수도 있고 특정 함수를 선언할수도있다. 범위지정자를 사용해서 CB::Func 이런식으로 해주면 CB의 Func함수내에서 A의 private를 접근할 수 있다.

상속
base 클래스 = 데이터를 물려주는 클래스, 국내에서는 부모 클래스 라고 표현을 많이 한다.
derived 클래스 : 데이터를 물려받는 클래스, 자식클래스 라고 표현을 많이 한다.
상속을 받는방법 = public : 상속받을클래스명 (protected와 private도 가능하지만 보통 public만 한다.) 상속받을 때 접근지정자에따라 외부에서 접근가능한지 아닌지 정할 수 있다.
상속을 받는다고 부모객체의 데이터를 공유받는게 아니다. 상속을 받은 자식 객체 내에서 부모객체를 생성한후 부모객체의 데이터를 갖고있는것이다.
때문에 상속 받을 때 부모생성자 호출후 자식생성자가 호출된다. 소멸될 때는 자식소멸자 소멸 후 부모소멸자가 소멸된다.
자식은 부모의 데이터를 사용할 수 있지만 부모는 절대로 자식의 데이터를 사용할 수 없다.
이는 컴파일 타이밍에 접근할 수 있는 범위가 정해지기 때문이다. 이를 정적바인딩 or static바인딩 이라고 한다.

