레벨을 게임플레이로 넘어가면 새로운 객체를 만든다.
게임플레이로 넘어간 객체들은 3차원공간으로 게임을 구성한다.
지형으로 Terrain 클래스를 하나 만들어준다.
게임오브젝트에 포함되게 한다.
D3DXMatrixLookAtLH내의 함수인자는 모두 월드스페이스 기준값이다.
Aspect쓸 때 float으로 캐스팅 해줘야한다.
매우 자주 검색하는객체면 플레이어의 레이어를 만들어서 플레이어만 넣어두면 검색할 때 매우 빠르다.
그래서 보통 플레이어나 카메라 같은 객체는 독립적인 레이어를 만들어서 넣어서 이레이어에 하나만 담아둔다.
배열을 하나 더 만든다. 인덱스버퍼
이 인덱스 버퍼는 삼각을 두개를 그리기 위해 사용해야할 정점들의 순서를 보관한다.
인덱스 버퍼는 정점의 순서만 가진다. 즉 숫자만 가진다. 인덱스버퍼의 한칸크기는 2Byte or 4Byte이다.
정점이 65535개 이상이라면 4Byte로 설정해야한다. 
대부분의 객체들이 인덱스버퍼를 가지기 때문에 VIBuffer에 구현을 한다.
FaceIndices16 구조체 생성 (면을 그리기 위한 인덱스들이다) 여기서 16은 16bit  2Byte란 의미다. short
FaceIndices32 = 32 long (3개 삼각형그린다)
LineIndices (2개 라인그린다)

CreateIndexBuffer함수 인덱스 버퍼 만드는 함수
1인자 : 삼각형을 몇개 그릴건지 (IndexSizeofPrimitive 하나의 도형을 그릴 때 필요한 크기)
2인자 : useage 정적버퍼로 셋팅해준다.
3인자 : 할당하려고하는 인덱스버퍼한칸의 크기를 몇바이트로 할건지 (상황에 따라 달라질 수 있으니 변수화 시킨다)
DrawIndexedPrimitive 2인자 = 원래 사용해야할 인덱스에 1더해서 연산해준다.

과제! 지형버퍼를 가로로 정점 100개 세로 정점 100개 선언하고
이 사이에 수많은 네모가 그려질 수 있게 만들어오기

와이어프레임을 그렸을 때 대각선으로 이루어지게 보이게 해오기
이걸 잘 만들었으면 지형의 높이를 랜덤하게 0~5로 줘봐라 그럼 울퉁불퉁하게 만들어진다.
PRIMITIVETYPE에서 POINTLIST는 정점의 버퍼를 1개씩 꺼내서 그린다는 의미다.

점하나만 정의하면 네모가 그려지게끔 하는 기법이 있다. 최소한의 데이터를 할당해서 점하나로 네모만들자는 기법을 DX에서 지원해준다.
이 그린 네모는 항상 카메라를 쳐다봐야한다. 때문에 내가 원하는대로 회전할 수 없다. DX11에선 이걸 지원하지않아서 직접 구현해야한다.
Strip이란 하나만꺼내거 이전에 그린거에 꺼낸것만 이어서 그린다는 것이다.
Fan은 인덱스를 하나 꺼내서 가장 처음사용했던 점과 마지막에 사용했던 점을 통해 라인을 그리고 그 라인에서 꺼낸점을 이어서 삼각형을 그린다.
SR때는 온니 LIST만 쓰지만 3D넘어가면 Line을 사용한다.

BackGround 수정할거다.
현재 컴포넌트를 객체안에 변수로 저장해놨다.
만약 Player란 녀석이 지형정점의 높이를 타면서 움직이고싶어 
이럴려면 지형 정점의 정보를 플레이어가 얻어와야한다.
지형버퍼를 구성하기위해 만들었던 지형정보를 가져와야한다.
특정객체가 또다른 객체의 컴포넌트를 가져오고싶다는 말이다. 이런작업이 빈번하게 일어난다.
월드행렬도 컴포넌트화 시킨다.
내가 다른객체의 위치를 얻어오고싶다면 그객체가 들고있던 월드행렬의 컴포넌트를 가져와야한다.
또다른 객체의 컴포넌트를 자주 탐색해야한다.
컴포넌트마다 다 참조할 수 있으면 다 Get함수를 만들어줘야한다.
그래서 이게 귀찮으니
컴포넌트를 Map에 추가한다.
그래서 내가 원하는 태그로 검색한 컴포넌트를 나한테 추가하는식으로 바꾼다.
이러면 지형의 해당태그에 해당하는 정보를 가져오는거다.
컴포넌트를 보관하는형태를 Map컨테이너로 교체하자
이러면 복잡한게 사용할 때 마다 Find를 해야한다.
터레인객체가 맴버변수로 터레인객체를 들고있는건 그대로한다.
대신 터레인이 들고있는 부모컴포넌트에 Map을 할당한다.
내가 소지하고 부모객체 Map에 추가한다.
이러면 맴버변수로 갖고있는건 바로 참조할 수 있고 
포함하지 않은 컴포넌트를 접근할 때도 부모가 Map을 갖고있기 때문에 Map에 접근이 가능하다.
이러면 부모에 변수에 마음대로 접근하기 때문에
모듈화를 위해서 부모에 함수로 생성해두자

정점과 정점사이의 값은 무조건 1이다.
y값은 다 0으로준다.
그래서 위치벡터를 다 채워준다.
Tex좌표는 일단 대충 채워둔다.

문제는 인덱스다.
인덱스채우는게 힘든데
네모를 그린다는 생각을 그대로 가져가서 접근해야한다.
정점의 사각형 정점끼고 사각형 가장끝 정점끼고는 사각형을 안그린다.
정점갯수 -1
가로갯수 -1
정점갯수-1 해주면 4x4해서 16사각형나온다. 원래는 5x5
4개씩만 루프를 돈다. 이중for문 돈다.
i가0일 때 1,2,3,4네모
네모를 구하기 위해서 인덱스를 구해야한다.
첫번째 루프에서 내가구하기 위해 구한 인덱스는 0이다.
두번째 루프에서 내가 구하기 위해 구한 인덱스는 5이다.
여기서 i는 왼쪽하단 네모를 그리기위한 인덱스이다.
i에+1하면 네모의 우측하단 네모 그려진다.
